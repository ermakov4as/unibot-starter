module.exports = {
    set_last_action_and_ckeck_notify_settings: set_last_action_and_ckeck_notify_settings,
    clean_and_say_bye: clean_and_say_bye,
    start: start
}

const c = console.log

function set_last_action_and_ckeck_notify_settings(user, nextStep) {
    if (!user.state) {
        user.input.type = 'command'
        user.input.body = '/start'
    }
    if (!user.messages) {
        user.messages = []
    }
    if (!user.ntf) {
        user.ntf = {
            power: false,
            days: [{
                name: '–ü–ù',
                power: true
            }, {
                name: '–í–¢',
                power: true
            }, {
                name: '–°–†',
                power: true
            }, {
                name: '–ß–¢',
                power: true
            }, {
                name: '–ü–¢',
                power: true
            }, {
                name: '–°–ë',
                power: false
            }, {
                name: '–í–°',
                power: false
            }],
            from: 7,
            to: 21,
            period: 3
        }
    }
    user.ntf.waiting = true
    user.ntf.lastAction = new Date().getTime()
    nextStep(user)
}


function clean_and_say_bye(user) {
    user.clean()
    if (user.name)
        user.addMessage(`–ë—É–¥—É –∂–¥–∞—Ç—å —Ç–≤–æ–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è, ${user.name}!`)
    else
        user.addMessage(`–ë—É–¥—É –∂–¥–∞—Ç—å —Ç–≤–æ–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è!`)
    user.addKeyboard([['üö™']])
    user.done()
    user.delete()
}
function start(user, nextStep) {
    if (user.name && user.key) {
        user.addMessage(`–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –∫–∞–∫ ${user.name}.\n–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞: /logout`)
        user.state = 'main'
    } else
        user.state = 'auth_autorization'
    nextStep(user)
}

