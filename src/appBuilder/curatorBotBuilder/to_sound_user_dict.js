module.exports = {
    get_all_sound_tasks: get_all_sound_tasks,
    go_home: go_home,
    go_to_commit_audio: go_to_commit_audio,
    get_ru_sentences: get_ru_sentences
}

const instances = require('../../instances')
const serv = instances.server
const c = console.log

function get_all_sound_tasks(user) {
    if (user.voice_requests) {
        user.addKeyboard([['‚¨ÖÔ∏è']])
        if (!user.voice_requests.length) {
            delete user.voice_requests
            user.done('–í—Å–µ —Ñ—Ä–∞–∑—ã –æ–∑–≤—É—á–µ–Ω—ã')
        } else {
            let prhase = user.voice_requests[0]
            user.done(`–û–∑–≤—É—á—Ç—å–µ\n${prhase.body}`)
        }
    } else
        serv.getVoiceRequests({ key: user.key }, (response) => {
            if (!response.length) {
                user.send('–ù—É –Ω–µ—Ç –∂–µ –Ω–∏—á–µ–≥–æ –æ–∑–≤—É—á–∏–≤–∞—Ç—å!')
                return
            }
            user.voice_requests = []
            let buffer = []//–°—é–¥–∞ —Ä—É—Å—Å–∫–∏–µ –±—É–¥–µ–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å, –ø–æ—Ç–æ–º —Å—Ö–ª–æ–ø–Ω–µ–º
            for (let r of response) {
                if (!(r.dict_unit.answer && r.dict_unit.question))
                    continue
                if (r.dict_unit.question)
                    user.voice_requests.push({
                        id_request: r.id,
                        field: 'question',
                        body: `üá¨üáß: ${r.dict_unit.question} üì£\nüá∑üá∫: ${r.dict_unit.answer}`
                    })
                if (r.dict_unit.answer)
                    buffer.push({
                        id_request: r.id,
                        field: 'answer',
                        body: `üá∑üá∫: ${r.dict_unit.answer} üì£\nüá¨üáß: ${r.dict_unit.question}`
                    })
            }
            user.voice_requests = user.voice_requests.concat(buffer)
            if (!user.voice_requests.length) {
                user.send('–ù–∞–¥–æ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ [—Ä–∞–∑–±–æ—Ä –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π](https://staff.swift-english.com/curator/requests/)')
                return
            }
            let prhase = user.voice_requests[0]
            let keyboard = [['‚¨ÖÔ∏è']]
            if (prhase.field == 'question')
                keyboard.push(['RU'])
            user.addKeyboard(keyboard)
            user.done(`–û–∑–≤—É—á—Ç—å–µ\n${prhase.body}`)
        })
}

function go_home(user, nextStep) {
    user.state = 'main'
    delete user.voice_requests
    nextStep(user)
}

function go_to_commit_audio(user, nextStep) {
    user.voice_requests[0].audio = user.input.body
    user.state = 'to_sound_user_dict_commit'
    nextStep(user)
}

function get_ru_sentences(user, nextStep) {
    let ru_voice_requests = []
    for (let p of user.voice_requests)
        if (p.field == 'answer')
            ru_voice_requests.push(p)
    user.voice_requests = ru_voice_requests
    nextStep(user)
}

